/**
 *
 * @author YogeshD
 */
class One implements Runnable
{
    public void run()
    {
        System.out.print("You are inside of Class One:");
        for(int i=1;i<=5;i++)
        {
            System.out.println("i="+i);
        }
        System.out.println("End of Class One");
    }
}
class Two implements Runnable
{
    public void run()
    {
        System.out.print("You are inside of Class Two:");
        for(int j=1;j<=5;j++)
        {
            System.out.println("j="+j);
        }
        System.out.println("End of Class Two");
    }
}
class Three implements Runnable
{
    public void run()
    {
        System.out.print("You are inside of Class Three:");
        for(int k=1;k<=5;k++)
        {
            System.out.println("k="+k);
        }
        System.out.println("End of Class Three");
    }
}
public class Multithreading_Java_Runnable {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        One obj_One=new One(); //Object of class
        Two obj_Two=new Two();
        Three obj_Three=new Three();
           
        Thread One_Thread=new Thread(obj_One);//Onject is used with the constructor
        Thread Two_Thread=new Thread(obj_Two);
        Thread Three_Thread=new Thread(obj_Three);
        
        //Set priority to a perticular Thread. 
        //Priority is on the scale of 1-10. (Lowest to Highest)
        Three_Thread.setPriority(8);
        //One_Thread.setPriority(Three_Thread.getPriority()-3);//Relative way to set priority
        Two_Thread.setPriority(Thread.MIN_PRIORITY);
        
                
        //Start Thread Life cycle
        One_Thread.start();
        Two_Thread.start();
        Three_Thread.start();
    }
}
